 System Overview
	The ESPA system is comprised of several types of nodes.  

	There is a user interface node, which must house a working Apache HTTPD server 
	with either mod_python or mod_wsgi installed, and must also have Django 1.3 installed.

	The database node must have a working copy of MySQL 5.x with a user defined 'espa'.

	The Hadoop Namenode and Hadoop TaskTracker nodes must have Apache Hadoop installed, naturally.

	Processing nodes must have Apache Hadoop installed as well as any science processing software,
	such as LEDAPS.

	The overall system flow is as follows.   
	A user request is submitted through the user interface whereby the request details 
	(requested scenes plus email address) are persisted to the database.
	
	A timed job (on the UI node) checks the Landsat online cache for scene availability and pulls 
	all available requested scenes from the cache to HDFS then updates the database accordingly.  Any
	scenes that were not available on the cache immediately are ordered through the TRAM MassLoader
	SOAP service.  The said timed job will periodically check the online cache to determine when the 
	ordered scenes are available.

	Once all requested scenes for an order are in HDFS, the UI node will submit the job to Hadoop's MapReduce
	engine, which takes care of distributing the individual scenes to available processing nodes.  Once completed,
	each processing node will store the finished scene back to HDFS and will notifiy the UI layer that it is 
	done.

	The UI layer will then move the files to the final distribution point (i.e. Landsat Web Server), update the 
	database, send the requesting user an email, and finally clean up HDFS.

	After a configured period of time (right now 14 days) the UI layer will also purge scenes from the Landsat Web
	Server to maintain adequate storage space for new orders.

Dependencies (All nodes)
	64 bit Linux
	Python 2.7
	Java JDK 1.6
	Apache Hadoop (HDFS + MapReduce)
	Python Libraries:
	suds 0.4 (for soap)
	gsconfig.py (available from https://github.com/dwins/gsconfig.py)
        gdal 1.6.3
        dans-gdal-scripts (available from http://www.gina.alaska.edu/projects/gina-tools/)
	

Dependencies (NameNode and TaskTracker)
	Apache 2.x Web Server
	MySQL 5.x Database
	Django 1.3
	mod_python or mod_wsgi

Dependencies (Processing Nodes)
	LEDAPS executables
		Must be located at /usr/local/bin/ledaps (will be installed here by default)
	LEDAPS ancillary data
		Must be located by system environment variable ANC_PATH 
		(Will be installed to /usr/local/var/ledaps/anc by default)
		
Change Notes
Version 2.0.2
        Fixed solr generation to account for landsat metadata field name changes
        Changed espa TRAM ordering priority
        Tested setting ESPA work directory to "." or cwd()
        
Version 2.0.1
        Added espa_internal for evaluation.

Version 2.0.0
        Modified architecture to remove the Chain of Command structure from processing.
        Modified espa to work with ledaps 1.1.2.
        Added ability for end users to select which products they want in their delivery (admin acct only at this time.)
        Added mapper.py and removed any external calls from espa.py except for scp calls to obtain data.  Mapper.py handles
        all status notifications to the espa tracking node now.

Version 1.3.8
        Updated espa to work with ledaps 1.1.1.

Version 1.3.7
        Updated espa to work with ledaps 1.1.0.  Added scene_cache.py to speed up scene submission.
        Multiple bugfixes and cosmetic website/email changes.
Version 1.3.5
        Updated 'lndpm' binary to work with new Landsat metdata
	
        Corrected metadata file lookup to account for Landsat's metadata format
	changes.
Version 1.3.4
	Corrections to reprojection code in espacollection.py when creating
        browse images.
Version 1.3.3
        Modifications to the NDVI code to release memory more quickly, reduce
        memory footprint.
Version 1.3.2
        Correction to the solr index to be semicolon seperated

Version 1.3.1
        Bug fixes for NDVI and CleanupDirs

Version 1.3
	Updated LEDAPS to the latest version from November 2011.  Added ability to generate NDVI for output products
	Multiple additions to collection processing to create browse and solr index.

Version 1.2
	Replaced Python's tar and untar commands in espa.py with the native operating system commands.
	Prior to this there were intermittent corrupt archives making it into the distribution node.
	Native os commands are also far faster than the python implementation.

Version 1.1
	Added RSS Status capability to ordering interface

Version 1.0
	First major stable version of ESPA released that will process Landsat L1T's to Surface Reflectance
